####################################################################
#       Temperature Monitor
#####################################################################

[temperature_sensor Manta]
sensor_type: temperature_mcu

[temperature_sensor rPi]
sensor_type: temperature_host
#gcode_id: PI

[temperature_sensor EBB36]
sensor_type: temperature_mcu
sensor_mcu: EBBCan

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - EBB FAN0
pin: EBBCan: EBB_FAN0
max_power: 1.0
kick_start_time: 0.0
heater: extruder
heater_temp: 50.0

[fan]
##	Print Cooling Fan - EBB FAN1
pin: EBBCan: EBB_FAN1
kick_start_time: 0.5
off_below: 0.25

[fan_generic BedFans]
##	Chamber Circulating Fans
pin: FAN_0
kick_start_time: 1.0
max_power: 1.0

[fan_generic air_filter]
##	Air Filtering Fan
pin: FAN_1
max_power:1.0

[multi_pin system_bay_fans]
pins: FAN_2, FAN_3

[fan_generic system_bay]
##  Controller fan
pin: multi_pin: system_bay_fans
max_power: 1.0

[temperature_fan chamber]
pin: FAN_4
tachometer_pin: TACH_4
max_power: 1.0
kick_start_time: 0.0
max_temp: 75.0
min_temp: 0.0
target_temp: 0
sensor_pin: EBBCan: EBB_TH0
sensor_type: Generic 3950
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0
gcode_id: C

#####################################################################
#  Nevermore Controller
#####################################################################
    
[gcode_macro _SET_FILTER]
description: Helper: Set Nevermore filter speed
gcode: SET_FAN_SPEED FAN=air_filter SPEED={params.S|default(0)}

[gcode_macro _FILTER_ON]
description: Helper: Nevermore on
gcode: _SET_FILTER S=75
  
[gcode_macro FILTER]
description: Toggle Nevermore fan
gcode:
  {% if printer['fan_generic air_filter'].speed|float > 0.0 %} _SET_FILTER {% else %} _FILTER_ON {% endif %}
  _FILTER_INFO

[delayed_gcode _DELAY_FILTER_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_FILTER
    _FILTER_INFO
  {% endif %}

[gcode_macro _FILTER_INFO]
description: Helper: Print Nevermore speed
gcode: {action_respond_info("Filter fan %s" % 'on' if printer['fan_generic air_filter'].speed|float > 0.0 else 'off')}


#####################################################################
#  System Bay Controller
#####################################################################

[gcode_macro _SET_SYSTEM_BAY]
description: Helper: Set system fan speed
gcode: SET_FAN_SPEED FAN=system_bay SPEED={params.S|default(0)}

[gcode_macro _SYSTEM_BAY_ON]
description: Helper: System bay fans on
gcode: _SET_SYSTEM_BAY S=60

[gcode_macro SYSTEM_BAY]
description: Toggle system bay fans
gcode:
  {% if printer['fan_generic system_bay'].speed|float > 0.0 %} _SET_SYSTEM_BAY {% else %} _SYSTEM_BAY_ON {% endif %}
  _SYSTEM_BAY_INFO

[delayed_gcode _DELAY_SYSTEM_BAY_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    _SET_SYSTEM_BAY
    _SYSTEM_BAY_INFO
  {% endif %}

[gcode_macro _SYSTEM_BAY_INFO]
description: Helper: Print system bay fans speed
gcode: {action_respond_info("Bay fans %s" % 'on' if printer['fan_generic system_bay'].speed|float > 0.0 else 'off')}

#####################################################################
#  Print Cooling Fan Lock
#####################################################################

## dummy output to get an switch in Mainsail
## any unused mcu pin can be defined you will not connect anything
## Off -> M106 will update fan
## On -> M106 can not uodate fan
[output_pin lock_part_fan]
pin: EBBCan: EBB_PROBE_1
value:0

# M106 with lock and manual set feature
# M106 S128 M1 will update the fan in any case
[gcode_macro M106]
description: set fan with manual override and lock option
rename_existing: M106.1
gcode:
  {% if printer['output_pin lock_part_fan'].value|int == 0 or params.M|default(0) == '1' %}
    M106.1 {rawparams}
  {% else %}
    {action_respond_info("Print cooling fan update is locked")}
  {% endif %}


#####################################################################
#  Chamber Vent Controller
#####################################################################

[gcode_macro M141]
description: Set temperature of chamber fan
gcode: SET_TEMPERATURE_FAN_TARGET temperature_fan=chamber target={params.S|default(0)}

##  Chamber Ventilation Control in Mainsail
[gcode_macro VENT]
description: Toggle Chamber fan
gcode:
    {% if printer['temperature_fan chamber'].target|float > 0 and 
          printer['temperature_fan chamber'].target|float <= 55|float %}
        M141
    {% else %}
        M141 S55
    {% endif %}
    _VENT_INFO

[delayed_gcode _DELAY_VENT_OFF]
gcode:
  {% if printer.print_stats.state|lower != "paused" and printer.print_stats.state|lower != "printing" %}
    M141
    _VENT_INFO
  {% endif %}

[gcode_macro _VENT_INFO]
description: Helper: Print chamber fan temperature
gcode:
  {% set txt = "off" if printer['temperature_fan chamber'].target == 0 
          else "target temp: %2dC" % printer['temperature_fan chamber'].target %}
  {action_respond_info("Chamber fan %s" % txt)}
    

#[fan_generic exhaust_fan]
#	Exhaust fan
#pin: FAN_5
#tachometer_pin: TACH_5
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#[fan_generic fan5]
#pin: FAN_5
#tachometer_pin: TACH_5

#[fan_generic fan6]
#pin: FAN_6
#tachometer_pin: TACH_6

#[temperature_sensor Manta]
#sensor_type: temperature_mcu

#[temperature_sensor rPi]
#sensor_type: temperature_host

#[temperature_sensor EBB36]
#sensor_type: temperature_mcu
#sensor_mcu: EBBCan

#[temperature_sensor chamber]
#sensor_type: Generic 3950
#sensor_pin: EBBCan: EBB_TH0
